// src/config/database.js - Configuraci√≥n de conexi√≥n a MongoDB
const mongoose = require('mongoose');

/**
 * Funci√≥n para conectar a la base de datos MongoDB
 * Esta funci√≥n establece la conexi√≥n con MongoDB usando Mongoose
 * y maneja errores de conexi√≥n
 */
const connectDB = async () => {
  try {
    // Obtener la URI de conexi√≥n desde las variables de entorno
    // MONGODB_URI debe estar definida en el archivo .env
    const conn = await mongoose.connect(process.env.MONGODB_URI, {
      // Estas opciones aseguran una conexi√≥n estable y moderna
      useNewUrlParser: true,      // Usa el nuevo parser de URL de MongoDB
      useUnifiedTopology: true,   // Usa el nuevo motor de monitoreo y descubrimiento de servidores
    });

    console.log(`‚úÖ MongoDB conectado: ${conn.connection.host}`);
    
    // Event listeners para monitorear el estado de la conexi√≥n
    
    // Se ejecuta cuando la conexi√≥n se establece correctamente
    mongoose.connection.on('connected', () => {
      console.log('üì° Mongoose conectado a MongoDB');
    });

    // Se ejecuta cuando hay un error en la conexi√≥n
    mongoose.connection.on('error', (err) => {
      console.error(`‚ùå Error de conexi√≥n MongoDB: ${err}`);
    });

    // Se ejecuta cuando la conexi√≥n se desconecta
    mongoose.connection.on('disconnected', () => {
      console.log('üì¥ Mongoose desconectado de MongoDB');
    });

    // Manejo de cierre graceful de la aplicaci√≥n
    // Cuando la aplicaci√≥n se cierra (Ctrl+C), cierra la conexi√≥n a MongoDB
    process.on('SIGINT', async () => {
      await mongoose.connection.close();
      console.log('üîå Conexi√≥n MongoDB cerrada debido a terminaci√≥n de la aplicaci√≥n');
      process.exit(0);
    });

  } catch (error) {
    // Si hay error al conectar, lo mostramos y terminamos el proceso
    console.error(`‚ùå Error al conectar a MongoDB: ${error.message}`);
    process.exit(1);
  }
};

module.exports = connectDB;